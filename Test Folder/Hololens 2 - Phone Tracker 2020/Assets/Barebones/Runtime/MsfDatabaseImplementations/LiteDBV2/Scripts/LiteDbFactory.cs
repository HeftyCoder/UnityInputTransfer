using UnityEngine;

#if (!UNITY_WEBGL && !UNITY_IOS) || UNITY_EDITOR
using LiteDB;
#endif

namespace Barebones.MasterServer
{
    public class LiteDbFactory : MonoBehaviour
    {
        public ServerBehaviour Server;

        protected virtual void Awake()
        {
            Server = Server ?? GetComponentInParent<ServerBehaviour>();

            if (Server == null)
            {
                Logs.Error("Database Factory server is not set. Make sure db factory " +
                           "is a child of ServerBehaviour, or that the Server property is set");
                return;
            }

            Server.Started += OnServerStarted;

            // If server is already running
            if (Server.IsRunning)
                OnServerStarted();
        }

        protected virtual void OnServerStarted()
        {
#if (!UNITY_WEBGL && !UNITY_IOS) || UNITY_EDITOR
            try
            {
                Msf.Server.DbAccessors.SetAccessor<IAuthDatabase>(new AuthDbLdb(new LiteDatabase(@"auth.db")));
                Msf.Server.DbAccessors.SetAccessor<IProfilesDatabase>(new ProfilesDatabaseLdb(new LiteDatabase(@"profiles.db")));
            }
            catch
            {
                Logs.Error("Failed to setup LiteDB. Try removing generated database files, because we've switched to V2 " +
                           "of LiteDB instead of V3. This caused files, generated by V3, to be incompatible with V2.");
                throw;
            }
#endif
        }

        protected virtual void OnDestroy()
        {
            if (Server != null)
                Server.Started -= OnServerStarted;
        }
    }
}

